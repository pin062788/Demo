<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:c="http://www.springframework.org/schema/c"
	   xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
                           http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd ">

  	<import resource="propertyFileConfigurer.xml"/>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>tipsMessage</value>
			</list>
		</property>
	</bean>

    <bean id="${db-pool-ds}" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${dataSource.driverClass}"/>
		<property name="jdbcUrl" value="${dataSource.jdbcUrl}"/>
		<property name="user" value="${dataSource.user}"/>
		<property name="password" value="${dataSource.password}"/>
		<property name="minPoolSize" value="${dataSource.minPoolSize}"/>
 		<property name="maxPoolSize" value="${dataSource.maxPoolSize}" />
  		<property name="maxIdleTime" value="${dataSource.maxIdleTime}" />
  		<property name="acquireIncrement" value="${dataSource.acquireIncrement}" />
  		<property name="maxStatements" value="${dataSource.maxStatements}" />
  		<property name="initialPoolSize" value="${dataSource.initialPoolSize}" />
  		<property name="idleConnectionTestPeriod" value="${dataSource.idleConnectionTestPeriod}" />
  		<property name="acquireRetryAttempts" value="${dataSource.acquireRetryAttempts}" />
  		<property name="breakAfterAcquireFailure" value="${dataSource.breakAfterAcquireFailure}" />
  		<property name="testConnectionOnCheckout" value="${dataSource.testConnectionOnCheckout}" />
	</bean> 
	<bean id="${db-jdbc-ds}" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${dataSource.driverClass}"/>
        <property name="url" value="${dataSource.jdbcUrl}"/>
        <property name="username" value="${dataSource.user}"/>
        <property name="password" value="${dataSource.password}"/>
 	</bean>
	<!-- Configure Transaction Manager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
		<property name="globalRollbackOnParticipationFailure" value="false" /><!--主事务决定是否回滚  -->
	</bean>
	
    <context:component-scan base-package="com.ocellus.*.service">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <context:component-scan base-package="com.ocellus.*.dao" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <!-- Configure to using @Transaction key word to add transaction management
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	-->
	 
  	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
  		<property name="transactionManager">
  			<ref bean="transactionManager" />
  		</property>
  		<property name="transactionAttributes">
    		<props>
    			<prop key="send*">PROPAGATION_REQUIRED</prop>
      			<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
      			<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
      			<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
	      		<prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
	     	 	<prop key="start*">PROPAGATION_REQUIRED,-Exception</prop>
	      		<prop key="complete*">PROPAGATION_REQUIRED,-Exception</prop>
			    <prop key="report*">PROPAGATION_REQUIRED,-Exception</prop>
			    <prop key="get*">PROPAGATION_REQUIRED,-Exception</prop>
			    <prop key="select*">PROPAGATION_REQUIRED,-Exception</prop>
			    <prop key="search*">PROPAGATION_REQUIRED,-Exception</prop>
			    <prop key="find*">PROPAGATION_REQUIRED,-Exception</prop>
			    <prop key="*">PROPAGATION_REQUIRED,-Exception</prop>
     		</props>
  		</property>
  	</bean>
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
    	<property name="beanNames">
    		<list>
      			<value>*Service</value>
     		</list>
    	</property>
    	<property name="interceptorNames">
     		<list>
      			<value>transactionInterceptor</value>
     		</list>
    	</property>
 	</bean> 

    <!-- configure the mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">        
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:conf/mybatis-configuration.xml"/>
		<property name="mapperLocations" value="classpath*:db/${jdbc.dialect}/com/ocellus/*/dao/*.xml"/>
		<!-- mapper扫描 -->
		<property name="plugins">
			<bean class="org.mybatis.extend.interceptor.CoreStatementInterceptor">
				<property name="dialect" >
					<bean class="org.mybatis.extend.dialect.${jdbc.dialect}Dialect"></bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ocellus.*.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
    <bean class="com.ocellus.platform.utils.ApplicationContextHolder"/>

</beans>